{
    "swagger": "2.0",
    "info": {
        "description": "This API returns content of a library including books",
        "title": "Library API",
        "contact": {},
        "version": "1.0"
    },
    "host": "{host}",
    "basePath": "/",
    "paths": {
        "/api/v1/books": {
            "get": {
                "description": "Get all the books",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get all the books in the library system",
                "responses": {
                    "200": {
                        "description": "Books fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/response.BookSuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a book by supplying a minimum of title and author",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Create a book in the library system",
                "parameters": [
                    {
                        "description": "Book Data",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Book created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/books/:id": {
            "get": {
                "description": "Get a single book using the id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get a single book in the library",
                "responses": {
                    "200": {
                        "description": "Book details fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/response.BookSuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a single book using the id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Update a book in the library",
                "responses": {
                    "200": {
                        "description": "Book updated successfully",
                        "schema": {
                            "$ref": "#/definitions/response.BookSuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single book using the id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Delete a book in the library",
                "responses": {
                    "200": {
                        "description": "Book deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/response.BookSuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Book": {
            "description": "Book model",
            "type": "object",
            "required": [
                "author",
                "title"
            ],
            "properties": {
                "author": {
                    "description": "@Description The author of this book",
                    "type": "string",
                    "example": "Markus Zusak"
                },
                "created_at": {
                    "description": "@Description When the book was created",
                    "type": "string",
                    "example": "2024-10-27T17:41:52Z"
                },
                "edition": {
                    "description": "@Description the edition of the book",
                    "type": "string",
                    "example": "1st"
                },
                "genre": {
                    "description": "@Description The genre of the book",
                    "type": "string",
                    "example": "Young Adult Literature"
                },
                "id": {
                    "description": "@Description The unique ID of a book",
                    "type": "integer",
                    "example": 1
                },
                "is_available": {
                    "description": "@Description Whether the book is available for borrowing or already borrowed",
                    "type": "boolean"
                },
                "summary": {
                    "description": "@Description the summary of this book",
                    "type": "string",
                    "example": "Liesel's life during WW2 with her stealing books that defy Nazi principles"
                },
                "title": {
                    "description": "@Description The title of the book",
                    "type": "string",
                    "example": "The Book Thief"
                },
                "updated_at": {
                    "description": "@Description When the book was updated                                                                               // @Description when the book was updated",
                    "type": "string",
                    "example": "2024-10-27T17:41:52Z"
                }
            }
        },
        "response.BookSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Book"
                },
                "message": {
                    "type": "string",
                    "example": "Data fetched successfully"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "response.ErrorResponse": {
            "description": "Error response model",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "An error occured"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        }
    }
}